import { EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from "@angular/forms";
import * as i0 from "@angular/core";
export declare class SearchFieldComponent implements OnInit, ControlValueAccessor {
    label: string;
    placeholder: string;
    icon: TemplateRef<SVGElement>;
    color: string;
    onCancel: EventEmitter<void>;
    onChange: EventEmitter<Event>;
    onKeydown: EventEmitter<KeyboardEvent>;
    onEnter: EventEmitter<KeyboardEvent>;
    width: string | number;
    marginBottom: string | number;
    marginLeft: string | number;
    marginRight: string | number;
    marginTop: string | number;
    margin: string | number;
    focus: boolean;
    disabled: boolean;
    value: string;
    onTouchedCallback: () => void;
    onChangeCallback: (_: any) => void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(obj: any): void;
    setDisabledState(isDisabled: boolean): void;
    constructor();
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDef<SearchFieldComponent>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<SearchFieldComponent, "ngx-desktop-search-field", never, { "label": "label"; "placeholder": "placeholder"; "icon": "icon"; "color": "color"; "width": "width"; "marginBottom": "marginBottom"; "marginLeft": "marginLeft"; "marginRight": "marginRight"; "marginTop": "marginTop"; "margin": "margin"; }, { "onCancel": "onCancel"; "onChange": "onChange"; "onKeydown": "onKeydown"; "onEnter": "onEnter"; }, never>;
}
